Задание:

Опишите абстрактный класс FloatSequence, представляющий понятие «последовательность чисел»; первый член последовательности определяется параметром конструктора, второй и последующие — чисто виртуальной функцией

virtual float Elem(int idx) const;

(функция принимает на вход номер элемента, причём первый элемент имеет номер 0, и возвращает его значение). Предусмотрите перегрузку операции индексирования, возвращающей заданный элемент (для аргумента 0 возвращать значение первого элемента, для остальных вызывать функцию Elem).

На основе этого класса определите класс GeometricSequence, предоставляющий понятие геометрической прогрессии; первый член и коэффициент задавать двумя параметрами конструктора. В этом классе предусмотрите операцию сложения прогрессий, работающую для прогрессий с одинаковым коэффициентом. В этом случае сумма геометрических прогрессий получается сложением их первых членов, коэффициент сохраняется без изменения. При попытке применения операции сложения к прогрессиям с разными коэффициентами выбрасывайте исключение, для чего опишите класс BadAddition, несущий в себе информацию о значениях коэффициентов в неудавшейся операции сложения (коэффициенты задать параметрами конструктора, для их чтения предусмотреть константные методы Get1() и Get2()).

В итоге ваша программа со следующей функцией main():

int main() {
    try {
        GeometricSequence a(1, 2);
        GeometricSequence b(0.25, 2);
        GeometricSequence c(16, 0.5);
        printf("%3.3f %3.3f %3.3f\n", a[0], b[3], c[2]);
        printf("%3.3f\n", (a+b)[1]);
        printf("%3.3f\n", (a+c)[1]);
    }
    catch(const BadAddition &x) {
        printf("Bad addition: %3.3f %3.3f\n", x.Get1(), x.Get2());
    }

    return 0;
}

должна компилироваться без ошибок и предупреждений, а после запуска напечатать:

1.000 2.000 4.000
2.500
Bad addition: 2.000 0.500
